"use strict";(()=>{var a={};a.id=465,a.ids=[465],a.modules={3827:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>h,default:()=>g});var e=c(7984),f=a([e]);e=(f.then?(await f)():f)[0];let h={api:{bodyParser:!0}},i=new e.default({apiKey:process.env.OPENAI_API_KEY});async function g(a,b){if("POST"!==a.method)return b.status(405).json({error:"Method not allowed"});let{message:c,lang:d="en"}=a.body;b.setHeader("Content-Type","text/plain; charset=utf-8"),b.setHeader("Cache-Control","no-cache, no-transform"),b.setHeader("Connection","keep-alive");try{let a=c.toLowerCase();if(!(a.includes("crop")||a.includes("farm")||a.includes("cattle")||a.includes("cow")||a.includes("goat")||a.includes("buffalo")||a.includes("fish")||a.includes("poultry")||a.includes("mushroom")||a.includes("hydro")||a.includes("mandi")||a.includes("scheme")||a.includes("pm-kisan")||a.includes("weather")||a.includes("warehouse")))return b.write("\uD83C\uDF31 I can only answer agriculture-related queries. Please ask about crops, livestock, fisheries, weather, mandi prices, or schemes."),b.end();if(a.includes("overdose")||a.includes("double dose")||a.includes("extra strong")||a.includes("maximum fertilizer"))return b.write("⚠️ Always follow the label instructions when using agrochemicals. For dosage confirmation, please consult your local KVK or agriculture officer."),b.end();let e=`You are KrishiGPT, an agricultural advisory assistant.
- Only answer agriculture-related queries (crops, pests, livestock, fisheries, mushrooms, hydroponics, govt schemes, warehouses, mandi prices, weather).
- Be practical, concise, step-wise, and safe.
- If unrelated, politely refuse.
- For pesticide/fertilizer doses: remind to follow label & local experts.
- Always reply in ${"en"===d?"English":"hi"===d?"Hindi":"Marathi"}.
- Add relevant emojis like 🌱🐄☁️🐟🍄 to make answers engaging for farmers.`;for await(let a of(await i.chat.completions.create({model:"gpt-4o-mini",temperature:.7,max_tokens:700,stream:!0,messages:[{role:"system",content:e},{role:"user",content:c}]}))){let c=a.choices?.[0]?.delta?.content||"";c&&b.write(c)}b.end()}catch(a){console.error("KrishiGPT stream error:",a),b.write("⚠️ Error generating response."),b.end()}}d()}catch(a){d(a)}})},5600:a=>{a.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7867:(a,b,c)=>{c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{config:()=>o,default:()=>n,handler:()=>m});var e=c(1223),f=c(4600),g=c(4409),h=c(6440),i=c(3827),j=c(9275),k=c(879),l=a([i]);i=(l.then?(await l)():l)[0];let n=(0,h.M)(i,"default"),o=(0,h.M)(i,"config"),p=new g.PagesAPIRouteModule({definition:{kind:f.A.PAGES_API,page:"/api/krishigpt/chat",pathname:"/api/krishigpt/chat",bundlePath:"",filename:""},userland:i,distDir:".next",relativeProjectDir:""});async function m(a,b,c){let d=await p.prepare(a,b,{srcPage:"/api/krishigpt/chat"});if(!d){b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve());return}let{query:f,params:g,prerenderManifest:h,routerServerContext:i}=d;try{let c=a.method||"GET",d=(0,j.getTracer)(),e=d.getActiveScopeSpan(),l=p.instrumentationOnRequestError.bind(p),m=async e=>p.render(a,b,{query:{...f,...g},params:g,allowedRevalidateHeaderKeys:[],multiZoneDraftMode:!1,trustHostHeader:!1,previewProps:h.preview,propagateError:!1,dev:p.isDev,page:"/api/krishigpt/chat",internalRevalidate:null==i?void 0:i.revalidate,onError:(...b)=>l(a,...b)}).finally(()=>{if(!e)return;e.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let f=d.getRootSpanAttributes();if(!f)return;if(f.get("next.span_type")!==k.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${f.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let g=f.get("next.route");if(g){let a=`${c} ${g}`;e.setAttributes({"next.route":g,"http.route":g,"next.span_name":a}),e.updateName(a)}else e.updateName(`${c} ${a.url}`)});e?await m(e):await d.withPropagatedContext(a.headers,()=>d.trace(k.BaseServerSpan.handleRequest,{spanName:`${c} ${a.url}`,kind:j.SpanKind.SERVER,attributes:{"http.method":c,"http.target":a.url}},m))}catch(a){if(p.isDev)throw a;(0,e.sendError)(b,500,"Internal Server Error")}finally{null==c.waitUntil||c.waitUntil.call(c,Promise.resolve())}}d()}catch(a){d(a)}})},7984:a=>{a.exports=import("openai")}};var b=require("../../../webpack-api-runtime.js");b.C(a);var c=b.X(0,[929],()=>b(b.s=7867));module.exports=c})();