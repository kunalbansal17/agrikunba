// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types



type PagesPageConfig = {
  default: React.ComponentType<any> | ((props: any) => React.ReactNode | Promise<React.ReactNode> | never | void)
  getStaticProps?: (context: any) => Promise<any> | any
  getStaticPaths?: (context: any) => Promise<any> | any
  getServerSideProps?: (context: any) => Promise<any> | any
  getInitialProps?: (context: any) => Promise<any> | any
  /**
   * Segment configuration for legacy Pages Router pages.
   * Validated at build-time by parsePagesSegmentConfig.
   */
  config?: {
    amp?: boolean | 'hybrid' | string // necessary for JS
    maxDuration?: number
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    regions?: string[]
  }
}

type ApiRouteConfig = {
  default: (req: any, res: any) => Promise<Response | void> | Response | void
  config?: {
    api?: {
      bodyParser?: boolean | { sizeLimit?: string }
      responseLimit?: string | number | boolean
      externalResolver?: boolean
    }
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    maxDuration?: number
  }
}






// Validate ../../pages/Header.tsx
{
  const handler = {} as typeof import("../../pages/Header.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/intent-search.tsx
{
  const handler = {} as typeof import("../../pages/intent-search.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/jobs.tsx
{
  const handler = {} as typeof import("../../pages/jobs.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/krishigpt.tsx
{
  const handler = {} as typeof import("../../pages/krishigpt.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/krishigpt/history.tsx
{
  const handler = {} as typeof import("../../pages/krishigpt/history.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/krishigpt/live.tsx
{
  const handler = {} as typeof import("../../pages/krishigpt/live.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/api/intent-search/events.ts
{
  const handler = {} as typeof import("../../pages/api/intent-search/events.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/intent-search/ingest.ts
{
  const handler = {} as typeof import("../../pages/api/intent-search/ingest.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/intent-search/search.ts
{
  const handler = {} as typeof import("../../pages/api/intent-search/search.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/intent-search/suggest.ts
{
  const handler = {} as typeof import("../../pages/api/intent-search/suggest.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/krishigpt/chat.ts
{
  const handler = {} as typeof import("../../pages/api/krishigpt/chat.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/krishigpt/suggestions.ts
{
  const handler = {} as typeof import("../../pages/api/krishigpt/suggestions.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/krishigpt/weather.ts
{
  const handler = {} as typeof import("../../pages/api/krishigpt/weather.js")
  handler satisfies ApiRouteConfig
}


